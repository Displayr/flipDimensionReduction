% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rotation.R
\name{RotateLoadings}
\alias{RotateLoadings}
\title{\code{RotateLoadings}}
\usage{
RotateLoadings(
  loadings,
  rotation = "varimax",
  delta = 0,
  kappa = 4,
  covar = FALSE,
  stds = NULL
)
}
\arguments{
\item{loadings}{A matrix containing the un-rotated loadings from a PCA or factor analysis.}

\item{rotation}{A string specifying the kind of rotation to be conducted. The allowed values are:
"varimax", "quartimax", "equamax", "oblimin", and "promax".}

\item{delta}{The parameter supplied to oblimin.}

\item{kappa}{The exponent supplied to promax.}

\item{covar}{Whether or not the loadings were generated by analysing a covariance matrix rather than a
correlation matrix. This is only relevant if using a promax rotation, as an extra scaling step
is required in order to match the outputs from SPSS.}

\item{stds}{If a covariance matrix was used (covar == TRUE) then the standard deviations of the original
input variables must be supplied. Again, this is required for a scaling step in promax.}
}
\description{
Rotate the component loadings from a principal components analysis or factor analysis.
}
\details{
This function utilizes the rotation options from \code{GPArotation} to match SPSS'
component rotations as closely as possible. As SPSS uses different rotation algorithms, the match is
not exact in all cases, but testing shows that the rotated loadings are effectively the same. Differences
will be most noticable for Oblimin rotations, as the GPA package does a much better job at minimizing
the oblimin function compared with SPSS, and for larger loading matrices where the solution space is larger.

A Kaiser normalization step is always included, to match what SPSS does.

The promax rotation, which is done algebraicly rather than by optimizing an objective function, uses our own function,
\code{flipPromax}, as the promax functions from \code{\link{stats}} and \code{\link{psych}} do not match
the SPSS outputs.
}
